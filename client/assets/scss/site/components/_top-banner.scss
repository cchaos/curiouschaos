$horn-images-size: rem-calc(80);

#top-banner {
  color: $white;

  flex: 0 0 100%;

  // Children
  display: flex;
  flex-direction: column;
  justify-content: space-between;

  .inner {
    padding: $global-padding*2 $global-padding $global-padding;
  }

  h1 {
    text-align: center;
    margin-top: 0;
    margin-bottom: $global-padding;
    color: $white;
  }

  header p {
    width: 90%;
    max-width: 36rem;
    margin-left: auto;
    margin-right: auto;

    text-align: center;
    font-weight: $font-weight-bold;
  }

  .me-description,
  footer,
  .about-link {
    display: none;
  }

  a {
    color: $white;
  }

  @include breakpoint($horizontal-breakpoint) {
    flex: 0 0 (rem-calc(320) - 4rem);
    transition: all .2s;

    h1 {
      margin-bottom: $global-padding*3;
    }

    .inner {
      padding-right: 0;
    }

    header p {
      text-align: left;
      width: 100%;
      padding-left: $global-padding;
    }

    .me-description,
    footer {
      display: block;
    }
  }

  @include breakpoint(95rem) {
    flex-basis: 20%;

    .inner {
      width: (rem-calc(320) - 4rem);
      margin-left: auto;
      margin-right: auto;
    }
  }

}

// position the images on top of each other
#horn_images {
	position: relative;

	// have to position all elements since we want them to be centered (without needing to use transform)
	// need to tell the container what size it is (based on image sizes)
	width: $horn-images-size;
	height: $horn-images-size;
	// then center it
	margin: $global-padding auto $global-padding*2;

	background-color: desaturate(lighten($primary-color, 2%), 5%);
	border-radius: $global-rounded;

	// make sure the container shrinks if the window gets too small
	max-width: 100%;

	img {
		position: absolute;
		top: 0px;
		left: 0px;

		// incase there's no javascript, hide all but the first
		&:not(:first-child){
			display: none;
		}
	}
}